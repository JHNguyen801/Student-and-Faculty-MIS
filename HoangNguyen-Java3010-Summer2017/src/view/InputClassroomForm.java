package view;

import backend.Classroom;
import java.awt.event.ActionListener;
import backend.Classroom.RoomType;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import data.DataContainer;
import exceptionhandling.NoDataException;
import exceptionhandling.ErrorDialog;
import javax.swing.DefaultComboBoxModel;

public class InputClassroomForm extends javax.swing.JFrame implements ActionListener
{
    ArrayList<Classroom> listOfClassrooms;

    /**
     * Creates new form ClassRoomInputWindow
     */
    public InputClassroomForm(DataContainer data) {

        // Initialize the form
        initComponents();
        // Link the buttons to the actionPerformed method
        this.clearbutton.addActionListener(this);
        this.savebutton.addActionListener(this);
        this.closebutton.addActionListener(this);
        // Retrieve the list of classrooms from the data model and store locally
        this.listOfClassrooms = data.getListOfClassrooms();
        // Create a data model that will hold all the enumerated room types
        DefaultComboBoxModel roomTypeList = new DefaultComboBoxModel(RoomType.values());

        // Once we have the data model we can link it to the list on the form
        typeOfRoomListField.setModel(roomTypeList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        roomNumberInputField = new javax.swing.JTextField();
        roomnumberlabel = new javax.swing.JLabel();
        roomtypelabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        savebutton = new javax.swing.JButton();
        clearbutton = new javax.swing.JButton();
        closebutton = new javax.swing.JButton();
        typeOfRoomListField = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel1.setText("Classroom Input Window");

        roomnumberlabel.setText("Room Number:");

        roomtypelabel.setText("Room Type:");

        savebutton.setText("Save");
        savebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(savebutton);

        clearbutton.setText("Clear");
        clearbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(clearbutton);

        closebutton.setText("  Exit ");
        closebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(closebutton);

        typeOfRoomListField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lab", "Classroom", "Lecture Hall", " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomtypelabel)
                    .addComponent(roomnumberlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(roomNumberInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeOfRoomListField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomnumberlabel)
                    .addComponent(roomNumberInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomtypelabel)
                    .addComponent(typeOfRoomListField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closebuttonActionPerformed
    @Override
public void actionPerformed(java.awt.event.ActionEvent event) {

        //  Create a hanndling event which button is clicked to take place.
        String buttonClicked = event.getActionCommand();

        if (buttonClicked.equals("Save")) {

            try 
            {
                saveData();
            } catch (NoDataException error) {
                ErrorDialog errordialog = new ErrorDialog(error.getMessage());
                errordialog.setVisible(true);
            }
        } else if (buttonClicked.equals("Clear")) {
            this.roomNumberInputField.setText("");
            this.typeOfRoomListField.setSelectedIndex(0);
        } else if (buttonClicked.equals("Close")) {
            this.dispose();
        }
    }
    private void savebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebuttonActionPerformed

         // Create a new classroom object
            Classroom aClassroom = new Classroom();
    }//GEN-LAST:event_savebuttonActionPerformed
 private void saveData() throws NoDataException {
        // Create a new classroom object
        Classroom aClassroom = new Classroom();

        // Retrieve the values from the form
        String room = this.roomNumberInputField.getText();
        // If no room number is input, throw an exception and display 
        // the error dialog.  Don't allow the user to continue until the
        // error if fixed.
        if (room.length() == 0) {
            throw new NoDataException("Missing room number");
        }

        // The value must come from the drop down list of string values and converted to a RoomType and RoomType value
        // Step 1 - Retrieve the data model associated with the combo list box
        ComboBoxModel datamodel = this.typeOfRoomListField.getModel();
        // Step 2 - Retrieve the selected item
        Object selectedItem = datamodel.getSelectedItem();
        // Step 3 - Convert (Cast) the selected item to a RoomType object
        Classroom.RoomType roomType = (Classroom.RoomType) selectedItem;
        // Step 4 - Use the Classroom setters to set the values
        aClassroom.setRoomNumber(room);
        aClassroom.setTypeOfRoom(roomType);

        // Add to the list in the data model
        this.listOfClassrooms.add(aClassroom);

    }
    private void clearbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbuttonActionPerformed
        this.roomNumberInputField.setText("");
        this.typeOfRoomListField.setSelectedIndex(0);
    }//GEN-LAST:event_clearbuttonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearbutton;
    private javax.swing.JButton closebutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField roomNumberInputField;
    private javax.swing.JLabel roomnumberlabel;
    private javax.swing.JLabel roomtypelabel;
    private javax.swing.JButton savebutton;
    private javax.swing.JComboBox typeOfRoomListField;
    // End of variables declaration//GEN-END:variables
}
